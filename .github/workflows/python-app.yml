name: Update ikuai_ipgroup-cn.txt  # 工作流名称

# 触发条件：定时运行 + 手动触发（方便测试）
on:
  schedule:
    # Cron 表达式：定时执行时间（UTC 时区，比北京时间晚8小时）
    # 示例：每天北京时间 02:00 执行（对应 UTC 18:00）
    - cron: '0 18 * * *'
  workflow_dispatch:  # 允许手动在 Actions 页面触发，用于测试

jobs:
  update-ipgroup:
    runs-on: ubuntu-latest  # 使用 Ubuntu 系统运行任务
    steps:
      # 步骤1：拉取仓库代码到 GitHub 服务器的运行环境
      - name: Checkout repository
        uses: actions/checkout@v4  # 拉取代码的官方 Action

      # 步骤2：安装 Python 环境（因脚本是 ip.py，需 Python 解释器）
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # 选择与 ip.py 兼容的 Python 版本

      # 步骤3（可选）：安装 ip.py 依赖（若脚本需要第三方库）
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # 若 ip.py 需要 requests 等库，添加：pip install requests
          # 无依赖则删除此步骤

      # 步骤4：运行 ip.py，生成/更新 ikuai_ipgroup-cn.txt
      - name: Run ip.py to update file
        run: python ip.py  # 执行脚本（确保脚本执行后更新目标文件）

      # 步骤5：提交更新后的文件到仓库
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5  # 自动提交的第三方 Action
        with:
          # 提交信息（可自定义）
          commit_message: "Auto update ikuai_ipgroup-cn.txt via ip.py"
          # 要提交的文件（仅更新目标文件，避免意外提交其他文件）
          file_pattern: "ikuai_ipgroup-cn.txt"
          # 提交者信息（可留空，默认使用 GitHub Actions 机器人）
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "actions@github.com"
